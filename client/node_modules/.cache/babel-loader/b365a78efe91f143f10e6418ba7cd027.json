{"ast":null,"code":"var _jsxFileName = \"/Users/sharonwatkins/Desktop/Code/kline/client/src/pages/auth/RegisterComplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createOrUpdateUser = async authtoken => {\n  return await axios.post(`${process.env.REACT_APP_API}/create-or-update-user`, {}, {\n    headers: {\n      authtoken\n    }\n  });\n};\n\nconst RegisterComplete = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  let navigate = useNavigate();\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\")); // console.log(window.location.href);\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // validation\n\n    if (!email || !password) {\n      toast.error(\"Email and password is required\");\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error(\"Password must be at least 6 characters long\");\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(email, window.location.href);\n      console.log(\"RESULT\", result);\n\n      if (result.user.emailVerified) {\n        // remove user email fom local storage\n        window.localStorage.removeItem(\"emailForRegistration\"); // get user id token\n\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult(); // redux store\n\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult);\n        createOrUpdateUser(idTokenResult.token).then(res => {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              token: idTokenResult.token,\n              role: res.data.role,\n              _id: res.data._id\n            }\n          });\n        }); // redirect\n\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      value: email,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-raised btn-outline-success\",\n      children: \"Complete Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-success text-center\",\n          children: \"Register Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), completeRegistrationForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterComplete, \"621orARgmmh+tZzMvHeE9Gw01T8=\", false, function () {\n  return [useSelector, useNavigate];\n});\n\n_c = RegisterComplete;\nexport default RegisterComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterComplete\");","map":{"version":3,"sources":["/Users/sharonwatkins/Desktop/Code/kline/client/src/pages/auth/RegisterComplete.js"],"names":["React","useState","useEffect","auth","toast","useNavigate","useDispatch","useSelector","axios","createOrUpdateUser","authtoken","post","process","env","REACT_APP_API","headers","RegisterComplete","email","setEmail","password","setPassword","user","state","navigate","window","localStorage","getItem","handleSubmit","e","preventDefault","error","length","result","signInWithEmailLink","location","href","console","log","emailVerified","removeItem","currentUser","updatePassword","idTokenResult","getIdTokenResult","token","then","res","dispatch","type","payload","name","data","role","_id","message","completeRegistrationForm","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios'\n\nconst createOrUpdateUser = async (authtoken) => {\n  return await axios.post(`${process.env.REACT_APP_API}/create-or-update-user`, {}, {\n    headers: {\n      authtoken\n    }\n  })\n}\n\nconst RegisterComplete = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { user } = useSelector((state) => ({...state}))\n  let navigate = useNavigate()\n\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\n    // console.log(window.location.href);\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // validation\n    if (!email || !password) {\n      toast.error(\"Email and password is required\");\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error(\"Password must be at least 6 characters long\");\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(\n        email,\n        window.location.href\n      );\n         console.log(\"RESULT\", result);\n      if (result.user.emailVerified) {\n        // remove user email fom local storage\n        window.localStorage.removeItem(\"emailForRegistration\");\n        // get user id token\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult();\n        // redux store\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult);\n\n        createOrUpdateUser(idTokenResult.token)\n        .then((res) => {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              token: idTokenResult.token,\n              role: res.data.role,\n              _id: res.data._id,\n            },\n          });\n        })\n        // redirect\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => (\n    <form onSubmit={handleSubmit}>\n      <input type=\"email\" className=\"form-control\" value={email} disabled />\n\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n        autoFocus\n      />\n      <br />\n      <button type=\"submit\" className=\"btn btn-raised btn-outline-success\">\n        Complete Registration\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 text-center\">\n          <h4 className='text-success text-center'>Register Complete</h4>\n          {completeRegistrationForm()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterComplete;"]},"metadata":{},"sourceType":"module"}