{"ast":null,"code":"var _jsxFileName = \"/Users/sharonwatkins/Desktop/Code/kline/client/src/components/routes/UserRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport LoadingToRedirect from \"./LoadingToRedirect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRoute = _ref => {\n  _s();\n\n  let {\n    children,\n    ...rest\n  } = _ref;\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  return user && user.token ? /*#__PURE__*/_jsxDEV(Route, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 31\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingToRedirect, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 53\n  }, this);\n};\n\n_s(UserRoute, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserRoute;\nexport default UserRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRoute\");","map":{"version":3,"sources":["/Users/sharonwatkins/Desktop/Code/kline/client/src/components/routes/UserRoute.js"],"names":["React","Route","useSelector","LoadingToRedirect","UserRoute","children","rest","user","state","token"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,MAAMC,SAAS,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA0B;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAWL,WAAW,CAAEM,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B;AAEA,SAAOD,IAAI,IAAIA,IAAI,CAACE,KAAb,gBAAqB,QAAC,KAAD,OAAWH;AAAX;AAAA;AAAA;AAAA;AAAA,UAArB,gBAA2C,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAAlD;AACD,CAJD;;GAAMF,S;UACaF,W;;;KADbE,S;AAMN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport LoadingToRedirect from \"./LoadingToRedirect\";\n\nconst UserRoute = ({ children, ...rest }) => {\n  const { user } = useSelector((state) => ({ ...state }));\n\n  return user && user.token ? <Route {...rest} /> : <LoadingToRedirect />;\n};\n\nexport default UserRoute"]},"metadata":{},"sourceType":"module"}