{"ast":null,"code":"var _jsxFileName = \"/Users/sharonwatkins/Desktop/Code/kline/client/src/pages/auth/RegisterComplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterComplete = _ref => {\n  _s();\n\n  let {} = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let navigate = useNavigate();\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\")); // console.log(window.location.href);\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // validation\n\n    if (!email || !password) {\n      toast.error(\"Email and password is required\");\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error(\"Password must be at least 6 characters long\");\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(email, window.location.href);\n      console.log(\"RESULT\", result);\n\n      if (result.user.emailVerified) {\n        // remove user email fom local storage\n        window.localStorage.removeItem(\"emailForRegistration\"); // get user id token\n\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult(); // redux store\n\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult); // redirect\n\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      value: email,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-raised btn-outline-success\",\n      children: \"Complete Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-success text-center\",\n          children: \"Register Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), completeRegistrationForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterComplete, \"vKvWtYiX7d9SDlgEm06zgmWBgq8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterComplete;\nexport default RegisterComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterComplete\");","map":{"version":3,"sources":["/Users/sharonwatkins/Desktop/Code/kline/client/src/pages/auth/RegisterComplete.js"],"names":["React","useState","useEffect","auth","toast","useNavigate","RegisterComplete","email","setEmail","password","setPassword","navigate","window","localStorage","getItem","handleSubmit","e","preventDefault","error","length","result","signInWithEmailLink","location","href","console","log","user","emailVerified","removeItem","currentUser","updatePassword","idTokenResult","getIdTokenResult","message","completeRegistrationForm","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\"\n\nconst RegisterComplete = ({ }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let navigate = useNavigate()\n\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\n    // console.log(window.location.href);\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // validation\n    if (!email || !password) {\n      toast.error(\"Email and password is required\");\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error(\"Password must be at least 6 characters long\");\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(\n        email,\n        window.location.href\n      );\n         console.log(\"RESULT\", result);\n      if (result.user.emailVerified) {\n        // remove user email fom local storage\n        window.localStorage.removeItem(\"emailForRegistration\");\n        // get user id token\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult();\n        // redux store\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult);\n        // redirect\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => (\n    <form onSubmit={handleSubmit}>\n      <input type=\"email\" className=\"form-control\" value={email} disabled />\n\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n        autoFocus\n      />\n      <br />\n      <button type=\"submit\" className=\"btn btn-raised btn-outline-success\">\n        Complete Registration\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 text-center\">\n          <h4 className='text-success text-center'>Register Complete</h4>\n          {completeRegistrationForm()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterComplete;"]},"metadata":{},"sourceType":"module"}